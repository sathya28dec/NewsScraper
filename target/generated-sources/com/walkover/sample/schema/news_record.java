/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.walkover.sample.schema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class news_record extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7754960528000079139L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"news_record\",\"namespace\":\"com.walkover.sample.schema\",\"fields\":[{\"name\":\"didUMean\",\"type\":\"string\"},{\"name\":\"relatedSearch\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"_type\",\"type\":\"string\"},{\"name\":\"totalCount\",\"type\":\"int\"},{\"name\":\"value\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"value_record\",\"fields\":[{\"name\":\"datePublished\",\"type\":\"string\",\"logicalType\":\"date\"},{\"name\":\"image\",\"type\":{\"type\":\"record\",\"name\":\"image\",\"fields\":[{\"name\":\"base64Encoding\",\"type\":[\"string\",\"null\"],\"default\":\"true\"},{\"name\":\"imageWebSearchUrl\",\"type\":[\"string\",\"null\"],\"default\":\"true\"},{\"name\":\"thumbnail\",\"type\":\"string\"},{\"name\":\"width\",\"type\":\"int\"},{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"thumbnailWidth\",\"type\":\"int\"},{\"name\":\"title\",\"type\":[\"string\",\"null\"],\"default\":\"true\"},{\"name\":\"thumbnailHeight\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"height\",\"type\":\"int\"}]}},{\"name\":\"keywords\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":{\"type\":\"record\",\"name\":\"provider\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"}]}},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"language\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"body\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"isSafe\",\"type\":\"boolean\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<news_record> ENCODER =
      new BinaryMessageEncoder<news_record>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<news_record> DECODER =
      new BinaryMessageDecoder<news_record>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<news_record> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<news_record> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<news_record>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this news_record to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a news_record from a ByteBuffer. */
  public static news_record fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence didUMean;
  @Deprecated public java.util.List<java.lang.CharSequence> relatedSearch;
  @Deprecated public java.lang.CharSequence _type;
  @Deprecated public int totalCount;
  @Deprecated public java.util.List<com.walkover.sample.schema.value_record> value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public news_record() {}

  /**
   * All-args constructor.
   * @param didUMean The new value for didUMean
   * @param relatedSearch The new value for relatedSearch
   * @param _type The new value for _type
   * @param totalCount The new value for totalCount
   * @param value The new value for value
   */
  public news_record(java.lang.CharSequence didUMean, java.util.List<java.lang.CharSequence> relatedSearch, java.lang.CharSequence _type, java.lang.Integer totalCount, java.util.List<com.walkover.sample.schema.value_record> value) {
    this.didUMean = didUMean;
    this.relatedSearch = relatedSearch;
    this._type = _type;
    this.totalCount = totalCount;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return didUMean;
    case 1: return relatedSearch;
    case 2: return _type;
    case 3: return totalCount;
    case 4: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: didUMean = (java.lang.CharSequence)value$; break;
    case 1: relatedSearch = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: _type = (java.lang.CharSequence)value$; break;
    case 3: totalCount = (java.lang.Integer)value$; break;
    case 4: value = (java.util.List<com.walkover.sample.schema.value_record>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'didUMean' field.
   * @return The value of the 'didUMean' field.
   */
  public java.lang.CharSequence getDidUMean() {
    return didUMean;
  }

  /**
   * Sets the value of the 'didUMean' field.
   * @param value the value to set.
   */
  public void setDidUMean(java.lang.CharSequence value) {
    this.didUMean = value;
  }

  /**
   * Gets the value of the 'relatedSearch' field.
   * @return The value of the 'relatedSearch' field.
   */
  public java.util.List<java.lang.CharSequence> getRelatedSearch() {
    return relatedSearch;
  }

  /**
   * Sets the value of the 'relatedSearch' field.
   * @param value the value to set.
   */
  public void setRelatedSearch(java.util.List<java.lang.CharSequence> value) {
    this.relatedSearch = value;
  }

  /**
   * Gets the value of the '_type' field.
   * @return The value of the '_type' field.
   */
  public java.lang.CharSequence getType$1() {
    return _type;
  }

  /**
   * Sets the value of the '_type' field.
   * @param value the value to set.
   */
  public void setType$1(java.lang.CharSequence value) {
    this._type = value;
  }

  /**
   * Gets the value of the 'totalCount' field.
   * @return The value of the 'totalCount' field.
   */
  public java.lang.Integer getTotalCount() {
    return totalCount;
  }

  /**
   * Sets the value of the 'totalCount' field.
   * @param value the value to set.
   */
  public void setTotalCount(java.lang.Integer value) {
    this.totalCount = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.util.List<com.walkover.sample.schema.value_record> getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.util.List<com.walkover.sample.schema.value_record> value) {
    this.value = value;
  }

  /**
   * Creates a new news_record RecordBuilder.
   * @return A new news_record RecordBuilder
   */
  public static com.walkover.sample.schema.news_record.Builder newBuilder() {
    return new com.walkover.sample.schema.news_record.Builder();
  }

  /**
   * Creates a new news_record RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new news_record RecordBuilder
   */
  public static com.walkover.sample.schema.news_record.Builder newBuilder(com.walkover.sample.schema.news_record.Builder other) {
    return new com.walkover.sample.schema.news_record.Builder(other);
  }

  /**
   * Creates a new news_record RecordBuilder by copying an existing news_record instance.
   * @param other The existing instance to copy.
   * @return A new news_record RecordBuilder
   */
  public static com.walkover.sample.schema.news_record.Builder newBuilder(com.walkover.sample.schema.news_record other) {
    return new com.walkover.sample.schema.news_record.Builder(other);
  }

  /**
   * RecordBuilder for news_record instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<news_record>
    implements org.apache.avro.data.RecordBuilder<news_record> {

    private java.lang.CharSequence didUMean;
    private java.util.List<java.lang.CharSequence> relatedSearch;
    private java.lang.CharSequence _type;
    private int totalCount;
    private java.util.List<com.walkover.sample.schema.value_record> value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.walkover.sample.schema.news_record.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.didUMean)) {
        this.didUMean = data().deepCopy(fields()[0].schema(), other.didUMean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.relatedSearch)) {
        this.relatedSearch = data().deepCopy(fields()[1].schema(), other.relatedSearch);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._type)) {
        this._type = data().deepCopy(fields()[2].schema(), other._type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalCount)) {
        this.totalCount = data().deepCopy(fields()[3].schema(), other.totalCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing news_record instance
     * @param other The existing instance to copy.
     */
    private Builder(com.walkover.sample.schema.news_record other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.didUMean)) {
        this.didUMean = data().deepCopy(fields()[0].schema(), other.didUMean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.relatedSearch)) {
        this.relatedSearch = data().deepCopy(fields()[1].schema(), other.relatedSearch);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other._type)) {
        this._type = data().deepCopy(fields()[2].schema(), other._type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.totalCount)) {
        this.totalCount = data().deepCopy(fields()[3].schema(), other.totalCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'didUMean' field.
      * @return The value.
      */
    public java.lang.CharSequence getDidUMean() {
      return didUMean;
    }

    /**
      * Sets the value of the 'didUMean' field.
      * @param value The value of 'didUMean'.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder setDidUMean(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.didUMean = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'didUMean' field has been set.
      * @return True if the 'didUMean' field has been set, false otherwise.
      */
    public boolean hasDidUMean() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'didUMean' field.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder clearDidUMean() {
      didUMean = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'relatedSearch' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getRelatedSearch() {
      return relatedSearch;
    }

    /**
      * Sets the value of the 'relatedSearch' field.
      * @param value The value of 'relatedSearch'.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder setRelatedSearch(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.relatedSearch = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'relatedSearch' field has been set.
      * @return True if the 'relatedSearch' field has been set, false otherwise.
      */
    public boolean hasRelatedSearch() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'relatedSearch' field.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder clearRelatedSearch() {
      relatedSearch = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the '_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getType$1() {
      return _type;
    }

    /**
      * Sets the value of the '_type' field.
      * @param value The value of '_type'.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder setType$1(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this._type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the '_type' field has been set.
      * @return True if the '_type' field has been set, false otherwise.
      */
    public boolean hasType$1() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the '_type' field.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder clearType$1() {
      _type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalCount' field.
      * @return The value.
      */
    public java.lang.Integer getTotalCount() {
      return totalCount;
    }

    /**
      * Sets the value of the 'totalCount' field.
      * @param value The value of 'totalCount'.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder setTotalCount(int value) {
      validate(fields()[3], value);
      this.totalCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'totalCount' field has been set.
      * @return True if the 'totalCount' field has been set, false otherwise.
      */
    public boolean hasTotalCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'totalCount' field.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder clearTotalCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.util.List<com.walkover.sample.schema.value_record> getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder setValue(java.util.List<com.walkover.sample.schema.value_record> value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public com.walkover.sample.schema.news_record.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public news_record build() {
      try {
        news_record record = new news_record();
        record.didUMean = fieldSetFlags()[0] ? this.didUMean : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.relatedSearch = fieldSetFlags()[1] ? this.relatedSearch : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        record._type = fieldSetFlags()[2] ? this._type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.totalCount = fieldSetFlags()[3] ? this.totalCount : (java.lang.Integer) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.util.List<com.walkover.sample.schema.value_record>) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<news_record>
    WRITER$ = (org.apache.avro.io.DatumWriter<news_record>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<news_record>
    READER$ = (org.apache.avro.io.DatumReader<news_record>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
